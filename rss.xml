<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"><channel><title>Today I learned. | ダーシノ(@bc_rikko)</title><description>フロントエンド関連で今日学んだことを共有</description><link>https://bcrikko.github.io/</link><item><title>{タイトル}</title><link>https://bcrikko.github.io/posts/1970-01-01/template/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/1970-01-01/template/</guid><description>{ページの概要}</description><pubDate>Thu, 01 Jan 1970 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>CSSだけでMasonryレイアウト（組積レイアウト）をする </title><link>https://bcrikko.github.io/posts/2022-07-07/css-masonry/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2022-07-07/css-masonry/</guid><description>{ページの概要}</description><pubDate>Thu, 07 Jul 2022 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>Mouse Event、Touch Event、Pointer Event の違い</title><link>https://bcrikko.github.io/posts/2024-02-28/mouseevent-touchevent-pointerevent/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-02-28/mouseevent-touchevent-pointerevent/</guid><description>Mouse Event、Touch Event、Pointer Event の違い</description><pubDate>Wed, 28 Feb 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>ポインターが要素からはみ出ても位置を追い続ける</title><link>https://bcrikko.github.io/posts/2024-02-28/set-pointer-capture/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-02-28/set-pointer-capture/</guid><description>Element#setPointerCapture()を使うと、Element#releasePointerCapture()が実行されるかpointerupされるまでキャプチャし続ける。</description><pubDate>Wed, 28 Feb 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>::backdropがスタイルを継承するようになっ</title><link>https://bcrikko.github.io/posts/2024-03-01/inherit-backdrop/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-03-01/inherit-backdrop/</guid><description>::backdropがスタイルを継承するようになったため、:rootで宣言した変数が使えるようになった。</description><pubDate>Fri, 01 Mar 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>Vitest（jest）でuseFakeTimers()を使うとPromiseが動かなくなる </title><link>https://bcrikko.github.io/posts/2024-03-04/vitest-usefaketimers/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-03-04/vitest-usefaketimers/</guid><description>useFakeTimersを使うと`Error: Test timed out in 5000ms.」となる。</description><pubDate>Mon, 04 Mar 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>世界一流エンジニアの思考法</title><link>https://bcrikko.github.io/posts/2024-03-05/engineer/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-03-05/engineer/</guid><description>「アジャイルサムライ」「リーダブルコード」「リーン」「エッセンシャル思考」「失敗の科学」「プログラマー脳」「ヘルシープログラマー」などの本を1冊にまとめたような本。一部「ん？ホンマか？」となる部分もあったが、読んでおいて損はない。</description><pubDate>Tue, 05 Mar 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>&lt;input type=&apos;checkbox&apos; switch&gt; で簡単スイッチUI</title><link>https://bcrikko.github.io/posts/2024-03-06/checkbox-switch/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-03-06/checkbox-switch/</guid><description>Safari TP 185でCheckboxのスイッチ化ができるようになった。</description><pubDate>Wed, 06 Mar 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>バニラCSSでSassの@functionや@mixin使える？！</title><link>https://bcrikko.github.io/posts/2024-03-06/css-function-mixin/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-03-06/css-function-mixin/</guid><description>{ページの概要}</description><pubDate>Wed, 06 Mar 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>CSS Scoping</title><link>https://bcrikko.github.io/posts/2024-03-06/scoped-css/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-03-06/scoped-css/</guid><description>Safari TP 185がCSS Scopingをサポートした。</description><pubDate>Wed, 06 Mar 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>safeキーワードを使ってあふれたアイテムをなんとか伝える</title><link>https://bcrikko.github.io/posts/2024-03-07/flexbox-safe/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-03-07/flexbox-safe/</guid><description>safeキーワードを使うとコンテナ要素からはみ出した場合に「文章の先頭だけ表示」ができるようになる。</description><pubDate>Thu, 07 Mar 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>テスト駆動開発の誤解とゴール</title><link>https://bcrikko.github.io/posts/2024-03-11/tdd/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-03-11/tdd/</guid><description>過去の自分は、テスト駆動開発（TDD）＝テストファーストという間違った認識をしていた。そこでテスト駆動開発 / Kent BecKを読んで認識が変わった。</description><pubDate>Mon, 11 Mar 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>持続可能なCSSルール ECSS（Efficient CSS）</title><link>https://bcrikko.github.io/posts/2024-03-14/efficient-css/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-03-14/efficient-css/</guid><description>ECSSとは、OOCSS、BEM、SMACSS、FLOCSSなどクラス名をどう命名するかに着目したCSS設計とはちょっと違っていて、どちらかというとコーディングガイドラインみたいなルール。</description><pubDate>Thu, 14 Mar 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>入力内容に応じてtextareaの高さを調整する</title><link>https://bcrikko.github.io/posts/2024-03-14/textarea-with-field-sizing/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-03-14/textarea-with-field-sizing/</guid><description>CSS4のfield-sizing()を使うことで、忌々しいtextareaの高さ問題を自動調整できるようになる。</description><pubDate>Thu, 14 Mar 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>JSON Canvas Format</title><link>https://bcrikko.github.io/posts/2024-03-15/json-canvas-format/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-03-15/json-canvas-format/</guid><description>JSON Canvas Formatとは、ObsidianのCanvas用に作られたJSONフォーマット。</description><pubDate>Fri, 15 Mar 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>ブラウザで簡易メモ帳を開く</title><link>https://bcrikko.github.io/posts/2024-03-15/tab-memo/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-03-15/tab-memo/</guid><description>contenteditable属性を使うことで、ブラウザのタブを簡易メモ帳にできる。</description><pubDate>Fri, 15 Mar 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>デジタルUIデザインの歴史</title><link>https://bcrikko.github.io/posts/2024-03-18/disital-ui-design-history/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-03-18/disital-ui-design-history/</guid><description>スキューモーフィズム、フラットデザイン、ニューモーフィズム</description><pubDate>Mon, 18 Mar 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>CSS Variable Groups</title><link>https://bcrikko.github.io/posts/2024-03-21/css-variable-group/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-03-21/css-variable-group/</guid><description>Sassの.Block { &amp;__Element: ... }のように&amp;でCSSカスタムプロパティを拡張するCSS Variable Groupという提案がなされている。</description><pubDate>Thu, 21 Mar 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>フォーカスがあたったinputに紐づくlabelを強調する</title><link>https://bcrikko.github.io/posts/2024-03-27/focus-within/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-03-27/focus-within/</guid><description>:focus-withinを使うと、その要素、または子要素にフォーカスが当たったときにスタイルを当てられる。</description><pubDate>Wed, 27 Mar 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>Chrome &apos;n&apos; Friends</title><link>https://bcrikko.github.io/posts/2024-03-28/chromenfriends/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-03-28/chromenfriends/</guid><description>Chrome系ブラウザ（ChromiumをベースとしたChromeをはじめ、Edge、Braveなどのブラウザを指す）</description><pubDate>Thu, 28 Mar 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>ライトモード/ダークモードで色を切り替える</title><link>https://bcrikko.github.io/posts/2024-03-28/light-dark/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-03-28/light-dark/</guid><description>light-dark()を使うことで、ユーザー環境のカラースキームによって色が自動で切り替わる。</description><pubDate>Thu, 28 Mar 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>system-colorを知る</title><link>https://bcrikko.github.io/posts/2024-03-29/system-color/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-03-29/system-color/</guid><description>system-colorはユーザーエージェントが提供しているカラーパレットで、Windowのハイコントラストモードにすると強制色モードが有効になりsystem-colorが変わる。</description><pubDate>Fri, 29 Mar 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>divdivしたHTMLのことをdivitis、またはdiv soupと呼ぶ</title><link>https://bcrikko.github.io/posts/2024-04-05/divitis-divsoup/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-04-05/divitis-divsoup/</guid><description>divdivしたHTMLのことを軽蔑的な意味を込めてdivitis、またはdiv soupと呼ぶ。</description><pubDate>Fri, 05 Apr 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>【令和最新版】上下中央揃え</title><link>https://bcrikko.github.io/posts/2024-04-18/align-content/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-04-18/align-content/</guid><description>flexやgrid用のコンテナを用意しなくてもalign-contentだけで上下中央揃えができるようになった。</description><pubDate>Thu, 18 Apr 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>ECMAScript Stage 4 になった仕様</title><link>https://bcrikko.github.io/posts/2024-04-18/ecmascript-stage4/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-04-18/ecmascript-stage4/</guid><description>ECMAScript Stage 4 になった仕様</description><pubDate>Thu, 18 Apr 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>CSSでHTMLをテストする</title><link>https://bcrikko.github.io/posts/2024-04-23/html-test-with-css/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-04-23/html-test-with-css/</guid><description>CSSでHTMLをテストする</description><pubDate>Tue, 23 Apr 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>Popover API + CSS Anchor Positioningでツールチップを表示する</title><link>https://bcrikko.github.io/posts/2024-04-26/popover-api-and-css-anchor-positioning/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-04-26/popover-api-and-css-anchor-positioning/</guid><description>Popover API + CSS Anchor Positioningでツールチップを表示する。</description><pubDate>Fri, 26 Apr 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>TypeScript 5.5がリリースされた</title><link>https://bcrikko.github.io/posts/2024-04-26/typescript-5.5</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-04-26/typescript-5.5</guid><description>{ページの概要}</description><pubDate>Fri, 26 Apr 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>Node.js v22で使えるようになった機能</title><link>https://bcrikko.github.io/posts/2024-05-07/node-v22/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-05-07/node-v22/</guid><description>Node.js v22がリリースされた。</description><pubDate>Tue, 07 May 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>Reactコンポーネントが提供する要素名を利用者に伝える</title><link>https://bcrikko.github.io/posts/2024-05-09/return-element-react/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-05-09/return-element-react/</guid><description>&lt;InfoMessage /&gt;というコンポーネントがあったとして、そのコンポ―ネントがInformationメッセージだけを返すのか、&lt;p&gt;でくくって返すのか利用者からはわからない。</description><pubDate>Thu, 09 May 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>2024年4月 全主要ブラウザで使えるようになった機能</title><link>https://bcrikko.github.io/posts/2024-05-09/web-platform-2024-04/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-05-09/web-platform-2024-04/</guid><description>2024年4月 全主要ブラウザで使えるようになった機能</description><pubDate>Thu, 09 May 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>存在しない型をつくらない</title><link>https://bcrikko.github.io/posts/2024-05-13/nonexistent-type/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-05-13/nonexistent-type/</guid><description>不要な状態ができないような型を作るアプローチは良い、古事記にもそう書かれている。</description><pubDate>Mon, 13 May 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>CSS Logical Propertiesで中央揃え</title><link>https://bcrikko.github.io/posts/2024-05-14/css-logical-properties/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-05-14/css-logical-properties/</guid><description>margin-block/margin-inlineはLogical Properties（論理プロパティ）と呼ばれ、ブロックの先頭、インラインの末尾のような意味的な場所に対応している。 そのため、writing-modeがvertical-lrでもvertical-rlでも使える。</description><pubDate>Tue, 14 May 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>font-sizeが10px未満にしても表示できる</title><link>https://bcrikko.github.io/posts/2024-05-17/font-size/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-05-17/font-size/</guid><description>ブラウザの最小フォントサイズは10pxだったが、0pxまで表示できるようになっている。VisuallyHiddenの代わりに使えるかも知れない。</description><pubDate>Fri, 17 May 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>トランジションさせる要素の初期状態を指定する@starting-style</title><link>https://bcrikko.github.io/posts/2024-05-21/starting-style/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-05-21/starting-style/</guid><description>`@starting-style`を使うと、トランジション開始時のスタイルを定義できる。</description><pubDate>Tue, 21 May 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>URL.parseで文字列をパースする</title><link>https://bcrikko.github.io/posts/2024-05-21/url-parse/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-05-21/url-parse/</guid><description>URL.parse()を使うと、URL.canParse()とnew URL()を一度に行うことができる。</description><pubDate>Tue, 21 May 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>すべてのアーキテクチャ・設計手法は「関心の分離」を実現するための手段</title><link>https://bcrikko.github.io/posts/2024-05-22/what-is-architecture/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-05-22/what-is-architecture/</guid><description>すべてのアーキテクチャ・設計手法は「関心の分離」を実現するための手段</description><pubDate>Wed, 22 May 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>属性駆動スタイリング</title><link>https://bcrikko.github.io/posts/2024-05-23/attribute-driven-styling/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-05-23/attribute-driven-styling/</guid><description>BEMでいうところのModifierをclas に含めず、属性で表現しスタイリングすること。</description><pubDate>Thu, 23 May 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>dialog要素はcolorを継承しない</title><link>https://bcrikko.github.io/posts/2024-05-24/dialog-inherit-color/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-05-24/dialog-inherit-color/</guid><description>dialog要素はコンテキストが切り替わるので、単純にcolor: inheritをしてしまうと直前の要素に指定されたcolorを継承してしまうからやっちゃダメかも。</description><pubDate>Fri, 24 May 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>アーキテクチャを突き詰める Online Conference で聞いたセッションでよかった</title><link>https://bcrikko.github.io/posts/2024-05-28/architecture-conference/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-05-28/architecture-conference/</guid><description>全体的に「関心の分離をどうするか」をいろんな視点・手法で発表するカンファレンスだった。  </description><pubDate>Tue, 28 May 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>操作せず一定時間が経過しても画面暗転やロックを防ぐ</title><link>https://bcrikko.github.io/posts/2024-05-29/wake-lock/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-05-29/wake-lock/</guid><description>Screen Wake Lock APIは電子書籍を読んでいるときやレシピを見ているときなど、操作してないけど暗転されると困るときに使う。</description><pubDate>Wed, 29 May 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>コンパイラに優しいコードを書く</title><link>https://bcrikko.github.io/posts/2024-05-30/slow-types/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-05-30/slow-types/</guid><description>Slow typesを書くとTypeScriptの型チェックが遅くなることがある。そのため、人間やブラウザだけでなく、コンパイラに優しいコードを書くことが求められる。</description><pubDate>Thu, 30 May 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>スクロールバー表示/非表示時のガタツキを防ぐ</title><link>https://bcrikko.github.io/posts/2024-06-03/css-scroll-bar/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-06-03/css-scroll-bar/</guid><description>あらかじめスクロールバー分のスペースを確保することで、要素が増えスクロールバーが表示されてもガタつかないようにできる。</description><pubDate>Mon, 03 Jun 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>PlaywrightとAxeでE2Eテストにアクセシビリティチェックを組み込む</title><link>https://bcrikko.github.io/posts/2024-06-04/playwright-axe-accessibility-check/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-06-04/playwright-axe-accessibility-check/</guid><description>ReactやVueなどでコンポーネントを分割しながら開発していると、文書全体の整合性チェックができない。そのため、E2Eテストに組み込むことでレンダリング後のHTMLを確認する。</description><pubDate>Tue, 04 Jun 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>早まったDRY原則の適用はやめよう</title><link>https://bcrikko.github.io/posts/2024-06-06/dont-dry-your-code-prematurely/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-06-06/dont-dry-your-code-prematurely/</guid><description>DRY原則は、「コード」ではなく「知識」の重複を防ぐこと。コードが重複しているから共通化しようと考えてはならない。</description><pubDate>Thu, 06 Jun 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>Node.jsの引数にパスを渡すときは引用符でくくる</title><link>https://bcrikko.github.io/posts/2024-06-06/node-arg/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-06-06/node-arg/</guid><description>引用符なしの場合、src/**/*.js が文字列としてではなく、このパターンに一致するパスが引数に渡ってしまう。そのため「ダメな例」で target を出力すると src/**/*.js ではなく src/index.jsという文字列になる。</description><pubDate>Thu, 06 Jun 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>ES2025で追加される新しいSetメソッドを使ってfilter実装を簡素化する</title><link>https://bcrikko.github.io/posts/2024-06-07/new-set-methods/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-06-07/new-set-methods/</guid><description>ES2025で追加予定（現在Stage4）の新しいSetメソッドを使うとArray#filter()の実装が楽になる。</description><pubDate>Fri, 07 Jun 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>dialog要素のどこにフォーカスを当てればよいか考える</title><link>https://bcrikko.github.io/posts/2024-06-12/dialog-focus/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-06-12/dialog-focus/</guid><description>dialog要素を表示したときに、ブラウザのデフォルトの挙動でフォーカスが当たる場所が微妙なので考えてみる。</description><pubDate>Wed, 12 Jun 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>.d.tsは参照のみでdistには含まれない</title><link>https://bcrikko.github.io/posts/2024-06-13/d-ts/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-06-13/d-ts/</guid><description>以下のような*.d.tsファイルはプロジェクト内限定の参照専用型定義ファイルのため、distディレクトリには出力されない。</description><pubDate>Thu, 13 Jun 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>Clipboard APIでクリップボードにアクセスする</title><link>https://bcrikko.github.io/posts/2024-06-14/clipboard-api/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-06-14/clipboard-api/</guid><description>Firefox127がClipboard APIのRead/Writeをサポートしたことで、全モダンブラウザで利用可能になった。</description><pubDate>Fri, 14 Jun 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>ECMAScript Stage2.7のJoint Itelationを使う</title><link>https://bcrikko.github.io/posts/2024-06-17/joint-itelation/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-06-17/joint-itelation/</guid><description>Joint Itelationは2つ以上のイテレータ（配列など）を同時にループしたいときに使える。</description><pubDate>Mon, 17 Jun 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>ECMAScript Stage3のPromise.try()を使う</title><link>https://bcrikko.github.io/posts/2024-06-17/promise-try/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-06-17/promise-try/</guid><description>関数には同期的な処理と非同期的な処理がある。関数利用者はいまから使う関数がPromiseを返すかどうか知りたくない。</description><pubDate>Mon, 17 Jun 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>State of JS 2023 から考えるライブラリとの付き合い方</title><link>https://bcrikko.github.io/posts/2024-06-21/state-of-js-2023/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-06-21/state-of-js-2023/</guid><description>個人的にState of JSをライブラリ選定の基準にするのは危険だと思っている。</description><pubDate>Fri, 21 Jun 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>「閉じる」アクションを適切に処理する CloseWatcher API</title><link>https://bcrikko.github.io/posts/2024-06-24/close-watcher-api/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-06-24/close-watcher-api/</guid><description>CloseWatcherAPIを使うとPCのESCキー、スマホの戻るボタンを押したことを検知して処理できるため、マルチデバイス対応が容易になる。</description><pubDate>Mon, 24 Jun 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>CSS Anchor Positioningを使ってネットワーク図をつくる</title><link>https://bcrikko.github.io/posts/2024-06-26/css-anchor-positioning/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-06-26/css-anchor-positioning/</guid><description>CSS Anchor Positioningを使うとターゲット要素（アンカー要素）の位置を簡単に取得できるため、JavaScriptを使わずネットワーク図のような複雑なGUIを作ることができる。</description><pubDate>Wed, 26 Jun 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>classとtypeのtype predicateの挙動の違い</title><link>https://bcrikko.github.io/posts/2024-06-28/class-type-predicate/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-06-28/class-type-predicate/</guid><description>自身の型を絞り込むために`T is U`のようなtype predicateを実装する場合、classとtypeでは挙動が異なるので注意が必要。</description><pubDate>Fri, 28 Jun 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>height:0→autoをトランジションする</title><link>https://bcrikko.github.io/posts/2024-07-01/height-transition/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-07-01/height-transition/</guid><description>通常height:0→autoのトランジションはできないが、calc-size()が実装されたら使えるようになる</description><pubDate>Mon, 01 Jul 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>@propertyの使い所</title><link>https://bcrikko.github.io/posts/2024-07-02/css-property/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-07-02/css-property/</guid><description>を使うことで、JavaScriptからCSSカスタムプロパティを参照したときに正しい値を取得できるようになる。</description><pubDate>Tue, 02 Jul 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>縦長のモーダルをスクロールする</title><link>https://bcrikko.github.io/posts/2024-07-10/scroll-in-modal/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-07-10/scroll-in-modal/</guid><description>Popover APIまたはdialog#showModal()で表示したdialog要素、::backdrop疑似要素はともにposition: fixedなのでBootstrapのようなスクロールができない。</description><pubDate>Wed, 10 Jul 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>CSSでif()が使えるようになる</title><link>https://bcrikko.github.io/posts/2024-07-12/css-if/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-07-12/css-if/</guid><description>Inline conditionals（if()）が CSS Values Module Level 5 の仕様に追加される。</description><pubDate>Fri, 12 Jul 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>setInterval()、setTimeout()は内部的にeval()を使っている（場合もある）</title><link>https://bcrikko.github.io/posts/2024-07-18/setInterval-setTimeout-eval/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-07-18/setInterval-setTimeout-eval/</guid><description>setInterval()、setTimeout()は内部的にeval()を使っている（場合もある）</description><pubDate>Thu, 18 Jul 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item><item><title>Node.js v22.5がリリースされた</title><link>https://bcrikko.github.io/posts/2024-07-19/node-v225/</link><guid isPermaLink="true">https://bcrikko.github.io/posts/2024-07-19/node-v225/</guid><description>Node.js v22.5がリリースされた。</description><pubDate>Fri, 19 Jul 2024 00:00:00 GMT</pubDate><author>ダーシノ</author></item></channel></rss>